package com.wenjing.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.wenjing.entity.Blog;

public interface BlogMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog
     *
     * @mbggenerated Fri Oct 30 16:05:23 CST 2015
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog
     *
     * @mbggenerated Fri Oct 30 16:05:23 CST 2015
     */
    int insert(Blog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog
     *
     * @mbggenerated Fri Oct 30 16:05:23 CST 2015
     */
    int insertSelective(Blog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog
     *
     * @mbggenerated Fri Oct 30 16:05:23 CST 2015
     */
    Blog selectByPrimaryKey(String id);
    
    /**
     * 
     * @param id
     * @return
     */
    Blog selectWithPageById(String id);
    
    /**
     * 根据Id查询所有的blog信息
     * 
     * @param id
     * @return
     */
    Blog selectAllById(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog
     *
     * @mbggenerated Fri Oct 30 16:05:23 CST 2015
     */
    int updateByPrimaryKeySelective(Blog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog
     *
     * @mbggenerated Fri Oct 30 16:05:23 CST 2015
     */
    int updateByPrimaryKeyWithBLOBs(Blog record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blog
     *
     * @mbggenerated Fri Oct 30 16:05:23 CST 2015
     */
    int updateByPrimaryKey(Blog record);
    
    /**
     * 更新博客的生成状态
     * 
     * @param id
     */
    void updateIsCreateById(@Param("isCreate")int isCreate,@Param("id")String id);
    
    /**
     * 查出所有的博客信息
     * @return
     */
    List<Blog> findAllByPage(@Param("startPos")int startPos,@Param("pageSize")int pageSize);
    
    /**
     * 获取最新发布的5条博客
     * 
     * @return
     */
    List<Blog> findRecentBlog();
    
    /**
     * 根据adminId查询最近发布的博客
     * 
     * @return
     */
    List<Blog> findRecentBlogByAdminId(String adminId);
    
    /**
     * 根据blog类型查询最新发布的blog
     * 
     * @param categoryId
     * @return
     */
    List<Blog> findRecentBlogByCategoryId(String categoryId);
    
    /**
     * 根据博客标签Id查询最新发布的blog
     * 
     * @param blogTagId
     * @return
     */
    List<Blog> findRecentBlogByTagId(String blogTagId);
    
    /**
     * 根据分页信息查询博客
     * 
     * @return
     */
    List<Blog> findRecentBlogByPage(@Param("startPos")int startPos,@Param("pageSize")int pageSize,@Param("searchTitle")String searchTitle);
    
    /**
     * 根据分页信息和标签ID查询博客
     * 
     * @param startPos
     * @param pageSize
     * @return
     */
    List<Blog> findRecentBlogWithTagByPage(@Param("startPos")int startPos,@Param("pageSize")int pageSize,@Param("blogTagId")String blogTagId,@Param("searchTitle")String searchTitle);
   
    /**
     * 根据分页信息和博客分类查询博客
     */
    List<Blog> findRecentBlogWithCategoryByPage(@Param("startPos")int startPos,@Param("pageSize")int pageSize,@Param("blogCategoryId")String blogCategoryId,@Param("searchTitle")String searchTitle);
    
    /**
     * 查询所有的数量
     * 
     * @return
     */
    int countAll(@Param("blogTitle")String blogTitle);
    
    /**
     * 根据标签ID和博客标题查询总数量
     * @return
     */
    int countAllByTagId(@Param("blogTagId")String blogTagId,@Param("seachTitle")String seachTitle);
    
    /**
     * 根据博客分类和博客标题查询总数量
     * 
     * @return
     */
    int countAllByCategoryId(@Param("categoryId")String categoryId,@Param("searchTitle")String searchTitle);
    
    /**
     * 更新blog生成
     * @param id
     */
    void updateCreate(String id);
    
    /**
     * 更新blog的评论数
     */
    void updateCommentsNumber(String commentsId);
}