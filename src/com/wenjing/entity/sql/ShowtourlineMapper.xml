<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.wenjing.dao.ShowtourlineMapper" >
  <resultMap id="BaseResultMap" type="com.wenjing.entity.Showtourline" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="costNumber" property="costnumber" jdbcType="VARCHAR" />
    <result column="tourlineId" property="tourlineid" jdbcType="VARCHAR" />
    <result column="addTime" property="addtime" jdbcType="INTEGER" />
    <result column="isCreate" property="isCreate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, costNumber, tourlineId, addTime,isCreate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from showtourline
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from showtourline
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wenjing.entity.Showtourline" >
    insert into showtourline (id, costNumber, tourlineId, 
      addTime,isCreate)
    values (#{id,jdbcType=VARCHAR}, #{costnumber,jdbcType=VARCHAR}, #{tourlineid,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=INTEGER},#{isCreate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wenjing.entity.Showtourline" >
    insert into showtourline
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      costNumber,
      tourlineId,
      addTime,
      isCreate,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      #{costnumber,jdbcType=VARCHAR},
      #{tourlineid,jdbcType=VARCHAR},
      #{addtime,jdbcType=INTEGER},
      #{isCreate,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wenjing.entity.Showtourline" >
    update showtourline
    <set >
      <if test="costnumber != null" >
        costNumber = #{costnumber,jdbcType=VARCHAR},
      </if>
      <if test="tourlineid != null" >
        tourlineId = #{tourlineid,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addTime = #{addtime,jdbcType=INTEGER},
      </if>
      <if test="isCreate != null" >
        isCreate = #{isCreate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wenjing.entity.Showtourline" >
    update showtourline
    set costNumber = #{costnumber,jdbcType=VARCHAR},
      tourlineId = #{tourlineid,jdbcType=VARCHAR},
      addTime = #{addtime,jdbcType=INTEGER},
      isCreate = #{isCreate,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <delete id="deleteBycostnumberAnaTourlineId">
     delete 
        from showtourline
        where tourlineId = #{tourlineId,jdbcType=VARCHAR}
              <if test="costNumber != null" >
		         and `costNumber` = #{costNumber,jdbcType=VARCHAR} 
		      </if>
  </delete>
  <select id="findByCostnumber" resultMap="BaseResultMap" >
   select * from showtourline where `costNumber` = #{costNumber,jdbcType=VARCHAR}
   <if test="isCreate != null">
   and isCreate = #{isCreate,jdbcType=INTEGER}
   </if>
  </select>
  <select id="findCountWithCostnumberAnaTourline" resultType="java.lang.Integer">
   select count(*) from showtourline  where `costNumber` = #{costNumber,jdbcType=VARCHAR} and tourlineId = #{tourlineId,jdbcType=VARCHAR}
  </select>
  <update id="updateByisCreate">
   update showtourline set isCreate = #{isCreate,jdbcType=INTEGER} where `costNumber` = #{costNumber,jdbcType=VARCHAR} and tourlineId = #{tourlineId,jdbcType=VARCHAR}
  </update>
  <update id="resetIsCreate">
    update showtourline set isCreate = null where tourlineId in
    <foreach collection="tourlineIds" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </update>
</mapper>