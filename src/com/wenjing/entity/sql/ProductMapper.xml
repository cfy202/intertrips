<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.wenjing.dao.ProductMapper" >
  <cache type="org.mybatis.caches.ehcache.EhcacheCache" />
  <resultMap id="BaseResultMap" type="com.wenjing.entity.Product" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="briefInfo" property="briefinfo" jdbcType="VARCHAR" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="editor" property="editor" jdbcType="VARCHAR" />
    <result column="isShow" property="isshow" jdbcType="BIT" />
    <result column="isHot" property="ishot" jdbcType="BIT" />
    <result column="indexShow" property="indexShow" jdbcType="BIT" />
    <result column="minPrice" property="minprice" jdbcType="DECIMAL" />
    <result column="costNumber" property="costnumber" jdbcType="VARCHAR" />
    <result column="pageId" property="pageid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="costNumberIds" property="costnumberids" jdbcType="VARCHAR" />
    <result column="productNo" property="productNo" jdbcType="VARCHAR" />
    <result column="departureIds" property="departureIds" jdbcType="VARCHAR" />
    <result column="hotDeparture" property="hotDeparture" jdbcType="VARCHAR" />
    <result column="isSynchronizedToERP" property="isSynchronizedToERP" jdbcType="INTEGER"/>
    <result column="excludeLandPrice" property="excludeLandPrice" jdbcType="INTEGER"/>
  <!--  
    <collection property="orderdetailsProductid" ofType="com.wenjing.entity.Orderdetail" column="id" select="com.wenjing.dao.OrderdetailMapper.selectByProductid" />
    <collection property="promotionassociationsProductid" ofType="com.wenjing.entity.Promotionassociation" column="id" select="com.wenjing.dao.PromotionProductMapper.selectByProductid" />
    <collection property="tourlinesProductid" ofType="com.wenjing.entity.Tourline" column="id" select="com.wenjing.dao.TourlineMapper.selectByProductid" />
  -->
  </resultMap>
  
  <resultMap id="ResultMapWithPage" type="com.wenjing.entity.Product" extends="BaseResultMap">
  	<association property="pagePageid" column="pageid" select="com.wenjing.dao.PageMapper.selectByPrimaryKey" />
  </resultMap>
  
  <select id="selectByPageId" resultMap="ResultMapWithPage" >
    select <include refid="Base_Column_List" /> from product where pageId =#{pageId}
  </select>
  
  <resultMap id="ResultMapWithBLOBs" type="com.wenjing.entity.Product" extends="ResultMapWithPage" >
    <result column="imageUrl" property="imageurl" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <resultMap type="com.wenjing.entity.Product" id="ResultMapWithSynchronousTourline" extends="BaseResultMap">
  	<association property="tourline" column="id" select="com.wenjing.dao.TourlineMapper.selectTourlineWithItinerary"></association>
  	<association property="cost" column="costnumber" select="com.wenjing.dao.CostMapper.selectByPrimaryKey"></association>
  </resultMap>
  
  <!-- fred  -->
  <resultMap id="ResultMapWithProductpromotion" type="com.wenjing.entity.Product" extends="BaseResultMap" >
    <result column="imageUrl" property="imageurl" jdbcType="LONGVARCHAR" />
  	<association property="pagePageid" column="pageid" select="com.wenjing.dao.PageMapper.selectByPrimaryKey" />
  </resultMap>
  
  <resultMap id="ResultMapWithPromotion" type="com.wenjing.entity.Product" extends="ResultMapWithBLOBs">
  	<collection property="promotions" javaType="java.util.List" ofType="com.wenjing.entity.Promotion" resultMap="PromotionResultMapWithCurrency">
  	</collection>
  </resultMap>
  
  <resultMap id="PromotionResultMapWithCurrency" type="com.wenjing.entity.Promotion" extends="com.wenjing.dao.PromotionMapper.BaseResultMap">
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="pIsShow" property="isshow" jdbcType="TINYINT" />
    <result column="pImageUrl" property="imageurl" jdbcType="VARCHAR" />
    <result column="pCostNumber" property="costnumber" jdbcType="VARCHAR" />
    <association property="currency" javaType="com.wenjing.entity.Currency">
         <result column="sign" property="sign" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  
  <resultMap type="com.wenjing.entity.Product" id="SimpleProductResult">
     <id column="id" property="id" jdbcType="VARCHAR" />
     <result column="code" property="code" jdbcType="VARCHAR" />
     <result column="name" property="name" jdbcType="VARCHAR" />
     <result column="productNo" property="productNo" jdbcType="VARCHAR" />
     <result column="cname" property="costnumberids" jdbcType="VARCHAR" />
     <result column="costnumber" property="costnumber" jdbcType="VARCHAR"/> 
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, code, `name`, briefInfo, updateTime, editor, isShow, isHot,indexShow, minPrice, costNumber, 
    pageId,type,costNumberIds,score,productNo,departureIds,hotDeparture,isSynchronizedToERP,excludeLandPrice
  </sql>
  
  <sql id="Blob_Column_List" >
    imageUrl
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="findById" resultMap="ResultMapWithProductpromotion" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectWithPromotionByPrimaryKey" resultMap="ResultMapWithPromotion" parameterType="java.lang.String">
	SELECT
		p.id, p.code, p.`name`, p.briefInfo, p.updateTime, p.editor, p.isShow, p.isHot,p.indexShow, p.minPrice, p.costNumber, p.pageId, p.score,p.isSynchronizedToERP,p.excludeLandPrice,
		pm.id, pm.title, pm.discount, pm.`full`, pm.reduce, pm.description, pm.isShow AS pIsShow, pm.imageUrl AS pImageUrl, pm.sort, pm.costNumber AS pCostNumber, 
        pm.currencyId, pm.starttime, pm.endtime, pm.totalNum, pm.soldNum, pm.createdate, pm.modifydate,c.sign
	FROM
		product p,
		promotionproduct pp,
		promotion pm,
		currency c
	WHERE
		p.id = pp.productId
	AND
		pm.id = pp.promotionId
	AND 
		pm.currencyId = c.id
	AND
		p.id = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="findAllTourline" resultMap="SimpleProductResult">
	SELECT
		p.id AS id,p.`code` AS `code`, p.`name` AS `name`, p.productNo AS productNo,c.`name`AS cname ,c.code AS costnumber
	FROM
		product p,
		cost c
	WHERE
		p.type = 1
	AND
		p.costNumber = c.id
	ORDER BY 
		find_in_set(c.`code`,'USD,AUD,CNY,CAD,EUR')
    limit #{startPos},#{pageSize}
  </select>
  
   <select id="findTourlineSize" resultType="INTEGER">
	SELECT
		COUNT(*)
	FROM
		product
	WHERE
		type = 1
  </select> 
  
  <select id="getWithPageById" resultMap="ResultMapWithPage" parameterType="java.lang.String">
  	select 
  	<include refid="Base_Column_List"/>
  	,
  	<include refid="Blob_Column_List"/>
  	from product
  	where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true" >
    delete from product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.wenjing.entity.Product" flushCache="true" >
    insert into product (id, code, `name`, 
      briefInfo, updateTime, editor, 
      isShow, isHot, indexShow, minPrice, costNumber, 
      pageId, imageUrl,type,costNumberIds,score,productNo,departureIds,hotDeparture,isSynchronizedToERP,excludeLandPrice)
    values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{briefinfo,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, #{editor,jdbcType=VARCHAR}, 
      #{isshow,jdbcType=BIT}, #{ishot,jdbcType=BIT},#{indexShow,jdbcType=BIT}, #{minprice,jdbcType=DECIMAL}, #{costnumber,jdbcType=VARCHAR}, 
      #{pageid,jdbcType=VARCHAR}, #{imageurl,jdbcType=LONGVARCHAR},#{type,jdbcType=INTEGER},#{costnumberids,jdbcType=VARCHAR},#{score,jdbcType=INTEGER},
      #{productNo,jdbcType=VARCHAR},#{departureIds,jdbcType=VARCHAR},#{hotDeparture,jdbcType=VARCHAR},#{isSynchronizedToERP,jdbcType=INTEGER},#{excludeLandPrice,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" parameterType="com.wenjing.entity.Product" flushCache="true" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      code,
      `name`,
      briefInfo,
      updateTime,
      editor,
      isShow,
      isHot,
      indexShow,
      minPrice,
      costNumber,
      pageId,
      imageUrl,
      type,
      costNumberIds,
      score,
      productNo,
      departureIds,
      hotDeparture,
      isSynchronizedToERP,
      excludeLandPrice
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      #{code,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{briefinfo,jdbcType=VARCHAR},
      #{updatetime,jdbcType=TIMESTAMP},
      #{editor,jdbcType=VARCHAR},
      #{isshow,jdbcType=BIT},
      #{ishot,jdbcType=BIT},
      #{indexShow,jdbcType=BIT},
      #{minprice,jdbcType=DECIMAL},
      #{costnumber,jdbcType=VARCHAR},
      #{pageid,jdbcType=VARCHAR},
      #{imageurl,jdbcType=LONGVARCHAR},
      #{type,jdbcType=INTEGER},
      #{costnumberids,jdbcType=VARCHAR},
      #{score,jdbcType=INTEGER},
      #{productNo,jdbcType=VARCHAR},
      #{departureIds,jdbcType=VARCHAR},
      #{hotDeparture,jdbcType=VARCHAR},
      #{isSynchronizedToERP,jdbcType=INTEGER},
      #{excludeLandPrice,jdbcType=INTEGER}
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.wenjing.entity.Product" flushCache="true" >
    update product
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="briefinfo != null" >
        briefInfo = #{briefinfo,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="editor != null" >
        editor = #{editor,jdbcType=VARCHAR},
      </if>
      <if test="isshow != null" >
        isShow = #{isshow,jdbcType=BIT},
      </if>
      <if test="ishot != null" >
        isHot = #{ishot,jdbcType=BIT},
      </if>
       <if test="indexShow != null" >
        indexShow = #{indexShow,jdbcType=BIT},
      </if>
      <if test="minprice != null" >
        minPrice = #{minprice,jdbcType=DECIMAL},
      </if>
      <if test="costnumber != null" >
        costNumber = #{costnumber,jdbcType=VARCHAR},
      </if>
      <if test="pageid != null" >
        pageId = #{pageid,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        imageUrl = #{imageurl,jdbcType=LONGVARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="costnumberids != null" >
        costNumberIds = #{costnumberids,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
      	score = #{score,jdbcType=INTEGER},
      </if>
      <if test="productNo != null" >
        productNo = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="departureIds != null" >
        departureIds = #{departureIds,jdbcType=VARCHAR},
      </if>
       <if test="hotDeparture != null" >
        hotDeparture = #{hotDeparture,jdbcType=VARCHAR},
      </if>
       <if test="isSynchronizedToERP != null" >
        isSynchronizedToERP = #{isSynchronizedToERP,jdbcType=INTEGER},
      </if>
       <if test="excludeLandPrice != null" >
        excludeLandPrice = #{excludeLandPrice,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.wenjing.entity.Product" flushCache="true" >
    update product
    set code = #{code,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      briefInfo = #{briefinfo,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      editor = #{editor,jdbcType=VARCHAR},
      isShow = #{isshow,jdbcType=BIT},
      isHot = #{ishot,jdbcType=BIT},
      indexShow = #{indexShow,jdbcType=BIT},
      minPrice = #{minprice,jdbcType=DECIMAL},
      costNumber = #{costnumber,jdbcType=VARCHAR},
      pageId = #{pageid,jdbcType=VARCHAR},
      imageUrl = #{imageurl,jdbcType=LONGVARCHAR},
      type = #{type,jdbcType=INTEGER},
      costNumberIds = #{costnumberids,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      productNo = #{productNo,jdbcType=VARCHAR},
      departureIds = #{departureIds,jdbcType=VARCHAR},
      hotDeparture = #{hotDeparture,jdbcType=VARCHAR},
      isSynchronizedToERP = #{isSynchronizedToERP,jdbcType=INTEGER},
      <if test="excludeLandPrice != null" >
        excludeLandPrice = #{excludeLandPrice,jdbcType=INTEGER}
      </if>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="getfilePath" resultType="java.lang.String" parameterType="java.lang.String">
  	select page.filePath from page,product where product.id=#{id,jdbcType=VARCHAR} and product.pageId=page.id	
  </select>
  
  <!-- 查询全部产品列表 -->
  <select id="findAll" resultMap="ResultMapWithPage">
    select * from product where isShow=1
  </select>
  
  <!-- 根据线路ID查找到产品 -->
  <select id="selectByTourlineId" resultMap="BaseResultMap">
	SELECT
		p.*
	FROM	
		product p,
		tourline t
	WHERE
		t.id = #{tourlineId,jdbcType=VARCHAR}
	AND
		p.id = t.productId
  </select>
  
  <select id="findBypromotionid" resultMap="ResultMapWithPage" parameterType="java.lang.String">
     select * from product WHERE id in(select productId from promotionproduct where promotionId=#{promotionid})
  </select>
  
   <!-- 根据costnumber查询产品列表 -->
  <select id="findAllByCostnumber" resultMap="ResultMapWithPage" parameterType="java.lang.String">
  <!--  
   select product.* 
     from product,
          tourline,
          showtourline
     where product.id = tourline.productId
           and tourline.id = showtourline.tourlineId
           and showtourline.costNumber=#{costnumber}
   -->       
	select p.*
	from tourline t,product p,showtourline st
	where 
	t.id=st.tourlineId
	and st.costNumber = #{costnumber,jdbcType=VARCHAR}
	and p.costNumberIds like '%${costnumber}%'
	and t.productId=p.id
	and (select min(sellingPrice) from `tourprice`,tourdate where 
	  tourprice.tourDateId=tourdate.id 
	  and tourdate.productId=t.productId 
	  and tourdate.isshow = true
	  and tourprice.costNumber = #{costnumber,jdbcType=VARCHAR}
	  and tourdate.endDate >= #{time,jdbcType=INTEGER})
	is not null  
	and p.id not in(select promotionproduct.productId product from promotion,promotionproduct where promotion.costNumber=#{costnumber,jdbcType=VARCHAR} and promotion.id = promotionproduct.promotionId)       
  </select>
  
   <!-- 根据costnumber查询产品列表 -->
  <select id="findIshotVisa" resultMap="ResultMapWithPage" >
    select <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
     from product where isShow=1 and isHot=1 and costNumber = #{costnumber,jdbcType=VARCHAR} and type= #{type,jdbcType=VARCHAR}
  </select>
  
  <!-- 根据ProductidList查询 -->
  <select id="findByProductidList" resultMap="ResultMapWithPage">
   select * from product WHERE id in
  <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
       #{item}
  </foreach>
  </select>
  
  <!-- 设置产品状态 -->
  <update id="updateWithShow"  flushCache="true">
    update product set isShow = #{isshow,jdbcType=BIT} where id = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 设置产品状态 -->
  <update id="updateWithHot"  flushCache="true">
    update product set isHot = #{ishot,jdbcType=BIT} where id = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 设置产品状态 -->
  <update id="updateWithIndexshow"  flushCache="true">
    update product set indexShow = #{indexShow,jdbcType=BIT} where id = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 修改最低价 -->
  <update id="updateminprice"  flushCache="true">
    update product set minPrice = #{minprice,jdbcType=DECIMAL} where id = #{productid,jdbcType=VARCHAR}
  </update>
  
  <select id="isExistUserCode" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from product 
    where 
    	code = #{code,jdbcType=VARCHAR}
  </select>
  
  <select id="isExistProductNo" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from product 
    where 
    	productNo = #{productNo,jdbcType=VARCHAR} 
    and 
    	costnumber = #{costnumber,jdbcType=VARCHAR} 
  </select>  
  
  <!-- 订单详情 -->
   <resultMap id="ResultProductAndPageMap" type="com.wenjing.entity.Product" extends="ResultMapWithBLOBs" >
     <association property="pagePageid" column="pageid" select="com.wenjing.dao.PageMapper.selectByPrimaryKey" />
     <collection property="promotions" column="id" select="com.wenjing.dao.PromotionMapper.findByProductId2"/>
   </resultMap>
   <select id="selectProductAndPageById" resultMap="ResultProductAndPageMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
   <!-- 修改costNoIds-->
  <update id="updateCostNumIds" flushCache="true">
     update product set costNumberIds = #{costNumIds} where id = #{productid}
  </update>
  
  <!-- 批量更新产品标签 -->
  <update id="updateProductTags" flushCache="true">
   update product set productNo = #{productNo} where id in 
   <foreach collection="productIds" index="index" item="item" open="(" separator="," close=")">
       #{item}
  </foreach>
  </update>
  <select id="findByTourlineId" resultMap="BaseResultMap" parameterType="java.lang.String">
     select code FROM product ,tourline where tourline.productId = product.id and tourline.id =#{tourlineId};
  </select>
  <select id="findProductByCondition" resultMap="ResultMapWithPage" parameterType="java.lang.String">
	select p.*
	from tourline t,product p,showtourline st,region r
	where 
	t.id=st.tourlineId
	and st.costNumber = #{costnumber,jdbcType=VARCHAR}
	and p.costNumberIds like '%${costnumber}%'
	and t.productId=p.id
	and (select min(sellingPrice) from `tourprice`,tourdate where 
	  tourprice.tourDateId=tourdate.id 
	  and tourdate.productId=t.productId 
	  and tourdate.isshow = true
	  and tourprice.costNumber = #{costnumber,jdbcType=VARCHAR}
	  and tourdate.endDate >= #{time,jdbcType=INTEGER})
	is not null 
	and r.id = t.regionId
	and r.isShow = 1
	<!--   
	and p.id not in(select promotionproduct.productId product from promotion,promotionproduct where promotion.costNumber=#{costnumber,jdbcType=VARCHAR} and promotion.id = promotionproduct.promotionId)       
  	-->
	<if test="tourName != null and tourName != ''">
	and p.name like "%${tourName}%"
	</if>
	<if test="tourCode != null and tourCode != ''">
	and p.code = #{tourCode,jdbcType=VARCHAR}
	</if>
	<if test="regionName != null and regionName != ''">
	and r.name like "%${regionName}%"
	</if>
	limit #{startPos},#{pageSize}
  </select>
  <select id="getProductCount" resultType="java.lang.Integer" parameterType="java.lang.String">
	select count(*)
	from tourline t,product p,showtourline st,region r
	where 
	t.id=st.tourlineId
	and st.costNumber = #{costnumber,jdbcType=VARCHAR}
	and p.costNumberIds like '%${costnumber}%'
	and t.productId=p.id
	and (select min(sellingPrice) from `tourprice`,tourdate where 
	  tourprice.tourDateId=tourdate.id 
	  and tourdate.productId=t.productId 
	  and tourdate.isshow = true
	  and tourprice.costNumber = #{costnumber,jdbcType=VARCHAR}
	  and tourdate.endDate >= #{time,jdbcType=INTEGER})
	is not null 
	and r.id = t.regionId
	and r.isShow = 1
	<if test="tourName != null and tourName != ''">
	and p.name like "%${tourName}%"
	</if>
	<if test="tourCode != null and tourCode != ''">
	and p.code = #{tourCode,jdbcType=VARCHAR}
	</if>
	<if test="regionName != null and regionName != ''">
	and r.name like "%${regionName}%"
	</if>
  </select>
  
  <select id="findPendingSynchronousTourline" resultMap="ResultMapWithSynchronousTourline">
  	SELECT
  		<include refid="Base_Column_List"/>
  	FROM	
  		product
	WHERE
		productNo != ''
	AND 
		type = 1	
	AND
		isSynchronizedToERP = 0
	AND
		UNIX_TIMESTAMP(updateTime) BETWEEN #{starttime} AND #{endtime}
  </select>
  
  <select id="findPendingSynchronousTourlineById" resultMap="ResultMapWithSynchronousTourline">
  	SELECT
  		<include refid="Base_Column_List"/>
  	FROM	
  		product
	WHERE
		id = #{id,jdbcType=VARCHAR}
  </select>
  
  <update id="synchronizeProduct">
  	UPDATE
  		product
  	SET
  		isSynchronizedToERP = 1
  	WHERE
  		id IN
	  <foreach collection="ids" item="item" open="(" separator="," close=")">
	     #{item}
	  </foreach>
  </update>
  
  <update id="setProductUnsynchronizeByProductId">
  	UPDATE
  		product
  	SET
  		isSynchronizedToERP = 0
  	WHERE
  		id = #{productId,jdbcType=VARCHAR}		
  </update>
  
  <update id="setProductUnsynchronizeByTourlineId">
	UPDATE
		product p,
		tourline t
	SET
		p.isSynchronizedToERP = 0
	WHERE
		t.id = #{tourlineId,jdbcType=VARCHAR}
	AND
		p.id = 	t.productId				  
  </update>
  
  <update id="setProductUnsynchronizeByHotel">
	UPDATE
		product p,
		tourline t,
		itinerary it
	SET
		p.isSynchronizedToERP = 0
	WHERE
		it.hotelId = #{hotelId,jdbcType=VARCHAR}
	AND	
		it.tourLineId = t.id
	AND
		p.id = 	t.productId	
  </update>
  
  <update id="setProductUnsynchronizeByTourdate">
  	UPDATE
  		product p,
  		Tourdate t
  	SET
  		p.isSynchronizedToERP = 0
  	WHERE
		t.id = #{tourdateId}  
	AND
		t.productId = p.id	
  </update>
  
  <select id="findFilePathByProductId" resultType="java.lang.String">
	SELECT
		pe.filePath
	FROM
		page pe,
		product p
	WHERE
		p.pageId = pe.id
	AND
		p.id = #{id}
  </select>
</mapper>