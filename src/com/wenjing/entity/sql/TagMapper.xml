<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.wenjing.dao.TagMapper" >
  <resultMap id="BaseResultMap" type="com.wenjing.entity.Tag" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="bgColor" property="bgcolor" jdbcType="VARCHAR" />
    <result column="textColor" property="textcolor" jdbcType="VARCHAR" />
    <result column="costNumber" property="costnumber" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <!-- 
    <collection property="producttagsTagid" ofType="com.wenjing.entity.Producttag" column="id" select="com.wenjing.dao.ProducttagMapper.selectByTagid" />
    -->
  </resultMap>
  <resultMap id="findAllWithCostMap" type="com.wenjing.entity.Tag" extends="BaseResultMap">
		<association property="cost" column="costNumber" select="com.wenjing.dao.CostMapper.selectByPrimaryKey" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `name`, bgColor, textColor,costNumber,type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tag
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tag
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wenjing.entity.Tag" >
    insert into tag (id, `name`, bgColor, textColor,costNumber,type)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{bgcolor,jdbcType=VARCHAR}, 
      #{textcolor,jdbcType=VARCHAR},#{costnumber,jdbcType=VARCHAR},#{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wenjing.entity.Tag" >
    insert into tag
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      `name`,
      bgColor,
      textColor,
      costNumber,
      type,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{bgcolor,jdbcType=VARCHAR},
      #{textcolor,jdbcType=VARCHAR},
      #{costnumber,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wenjing.entity.Tag" >
    update tag
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="bgcolor != null" >
        bgColor = #{bgcolor,jdbcType=VARCHAR},
      </if>
      <if test="textcolor != null" >
        textColor = #{textcolor,jdbcType=VARCHAR},
      </if>
      <if test="costnumber != null" >
        costNumber = #{costnumber,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if> 
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wenjing.entity.Tag" >
    update tag
    set `name` = #{name,jdbcType=VARCHAR},
      bgColor = #{bgcolor,jdbcType=VARCHAR},
      textColor = #{textcolor,jdbcType=VARCHAR},
      #{costnumber,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findAll" resultMap="findAllWithCostMap">
   select * from tag 
   <if test="type!=null">
    where type = #{type,jdbcType=INTEGER}
   </if>
   <if test="costnumber!=null">
    or costNumber = #{costnumber,jdbcType=VARCHAR}
   </if>
   order by type
  </select>
  <select id="findRegionShow" resultMap="BaseResultMap" parameterType="java.lang.String">
	select name from tag where id in(
		select tagId from producttag ,
		(select p.id 
		from tourline t,product p,region r,showtourline st 
		where t.id=st.tourlineId 
		and st.costNumber = #{costnumber,jdbcType=VARCHAR}  
		and p.costNumberIds like '%${costnumber}%' 
		and t.productId=p.id 
		and r.id = t.regionId 
		and r.isShow = 1 
		and t.parentIds like '%${regionid}%'  
		and (select min(sellingPrice) from `tourprice`,tourdate where tourprice.tourDateId=tourdate.id and tourdate.tourLineId=t.id and tourdate.isshow = true and tourprice.costNumber = #{costnumber,jdbcType=VARCHAR}  and tourdate.endDate >= #{time,jdbcType=INTEGER}) is not null 
		) as pt 
		where producttag.costNumber = #{costnumber,jdbcType=VARCHAR} 
		and pt.id = producttag.productId
	)
  </select>
  <select id="findByIdCostnumber" resultMap="BaseResultMap" parameterType="java.lang.String">
	select tag.* from tag,producttag pt 
	where pt.costNumber = #{costnumber,jdbcType=VARCHAR} 
	and pt.productId = #{productId,jdbcType=VARCHAR}
	and pt.tagId = tag.id
  </select>
  
</mapper>