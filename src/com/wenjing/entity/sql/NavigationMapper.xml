<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.wenjing.dao.NavigationMapper" >
  <resultMap id="BaseResultMap" type="com.wenjing.entity.Navigation" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="upId" property="upid" jdbcType="VARCHAR" />
    <result column="costNumber" property="costnumber" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="sonmaxsort" property="sonmaxsort" jdbcType="INTEGER" />
    <result column="pname" property="pname" jdbcType="VARCHAR" />
    <result column="isShow" property="isShow" jdbcType="INTEGER" />
    <association property="cost" javaType="com.wenjing.entity.Cost">
       <result column="costname" property="name" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, `name`, url, orderId, `type`,upId, costnumber, level, sonmaxsort, pname,isShow
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from navigation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String"  flushCache="true">
    delete from navigation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wenjing.entity.Navigation" >
    insert into navigation (id, `name`, url, 
      orderId, `type`,upId, costNumber, level, sonmaxsort, pname,isShow)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{orderid,jdbcType=INTEGER}, #{type,jdbcType=INTEGER},#{upid,jdbcType=VARCHAR}, #{costnumber,jdbcType=VARCHAR},
       #{level,jdbcType=INTEGER}, #{sonmaxsort,jdbcType=INTEGER}, #{pname,jdbcType=VARCHAR},#{isShow,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wenjing.entity.Navigation"  flushCache="true">
    insert into navigation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      `name`,
      url,
      orderId,
      `type`,
      upId, 
      costNumber,
      level, 
      sonmaxsort,
      pname,
      isShow,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{url,jdbcType=VARCHAR},
      #{orderid,jdbcType=INTEGER},
      #{type,jdbcType=INTEGER},
      #{upid,jdbcType=VARCHAR},
      #{costnumber,jdbcType=VARCHAR},
      #{level,jdbcType=INTEGER}, 
      #{sonmaxsort,jdbcType=INTEGER},
      #{pname,jdbcType=VARCHAR},
      #{isShow,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wenjing.entity.Navigation"  flushCache="true">
    update navigation
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="upid != null" >
        upId = #{upid,jdbcType=VARCHAR},
      </if>
      <if test="costnumber != null" >
        costNumber = #{costnumber,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="sonmaxsort != null" >
        sonmaxsort = #{sonmaxsort,jdbcType=INTEGER},
      </if>
      <if test="pname != null" >
        pname = #{pname,jdbcType=VARCHAR},
      </if>
      <if test="isShow != null" >
        isShow = #{isShow,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wenjing.entity.Navigation"  flushCache="true">
    update navigation
    set `name` = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      orderId = #{orderid,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      `upId` = #{upid,jdbcType=INTEGER},
      `costNumber` = #{costnumber,jdbcType=INTEGER},
      level  = #{level ,jdbcType=INTEGER},
      sonmaxsort  = #{sonmaxsort ,jdbcType=INTEGER},
      pname = #{pname,jdbcType=VARCHAR},
      isShow = #{isShow,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 查询所有导航项 -->
  <select id="findAll" resultMap="BaseResultMap" parameterType="java.lang.String">
     select <include refid="Base_Column_List"/> from navigation where costNumber=#{costnumber,jdbcType=VARCHAR} order by orderId
  </select>
  
  <!-- 根据运营中心id查询对应导航列表 -->
   <select id="findAllByCostNumber" resultMap="BaseResultMap">
     select navigation.*,cost.name costname  from navigation,cost where navigation.costNumber=cost.id and costNumber in
      <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
        #{item}
      </foreach>
      order by type,costNumber,orderId
   </select>
  
  <!-- 获取当前orderid最大值 -->
  <select id="getMaxOrderId" resultType="java.lang.Integer" parameterType="java.lang.String">
     select ifnull(max(orderId),0) from navigation where costNumber= #{costnumber,jdbcType=VARCHAR}
  </select>
  
  <select id="findByType" resultMap="BaseResultMap">
  	select * from navigation where type=#{type,jdbcType=INTEGER} 
  	and costNumber =#{costnumber,jdbcType=VARCHAR} 
  	and isShow = 1
  	order by costNumber,orderId
  </select>
  
  <select id="findByUpIdAndCostid" resultMap="BaseResultMap">
  	select * from navigation where costNumber=#{costnumber,jdbcType=VARCHAR} and type=#{type,jdbcType=INTEGER} order by costNumber,orderId
  </select>
  
  <!-- 根据costnumber、type获取最大排序号 -->
  <select id="getMaxSort" resultType="java.lang.Integer">
     select ifnull(max(orderId),0) from navigation where costNumber=#{costnumber,jdbcType=VARCHAR} and type=#{type}
  </select>
  
  <!-- 更新排序号,所有排序号>maxSort的sort+1 -->
   <update id="updateSort" flushCache="true">
     update navigation set orderId = orderId <![CDATA[+]]> 1 where costNumber = #{costnumber} and orderId > #{sonmaxsort,jdbcType=INTEGER}
  </update>
  
   <!-- 查询upid相同的sort最大值 -->
  <select id="getMaxSortByUpId" resultType="java.lang.Integer" parameterType="java.lang.String">
     select ifnull(max(orderId),0) from navigation where upId=#{upid,jdbcType=VARCHAR}
  </select>
  
   <!-- 更儿子最大排序号 -->
   <update id="updateSonMaxSort" flushCache="true">
     update navigation set sonmaxsort = #{sort,jdbcType=INTEGER}
  </update>
  
  <!-- 修改儿子的级别-->
   <update id="updateSonLevel" flushCache="true">
     update navigation set level = #{a} where costNumber = #{costnumber} and orderId between #{start} and #{end}
  </update>
  
   <!-- 第一个儿子到最后一个儿子的sort-(oldsort-新sort)-->
   <update id="updateSonSort" flushCache="true">
     update navigation set orderId = orderId <![CDATA[-]]> #{a}, sonmaxsort = 1 where costNumber = #{costnumber} and orderId between #{start} and #{end} and sonmaxsort<![CDATA[<>]]>1
  </update>
  
  <!-- 修改后新sort之后的到oldsort之间的sort+(oldsort-新sort)-->
   <update id="updateNewSortBack" flushCache="true">
     update navigation set orderId = orderId <![CDATA[+]]> #{a}, sonmaxsort = 1 where costNumber = #{costnumber} and orderId between #{start} and #{end} and sonmaxsort<![CDATA[<>]]>1
  </update>
  
  <!-- 删除所有的儿子 -->
   <delete id="deleteAllSon" flushCache="true" >
    delete from navigation where costNumber = #{costnumber} and orderId between #{start} and #{end}
  </delete>
  
  <!-- 修改删除后的排序 -->
   <update id="updateDeleteSort" flushCache="true">
     update navigation set orderId = orderId <![CDATA[-]]> #{a} where costNumber = #{costnumber} and orderId > #{sort,jdbcType=INTEGER}
  </update>
  
  <!-- 查询不等于此orderid的所有 -->
  <select id="findNotContainSelf" resultMap="BaseResultMap" >
  	 select * from navigation where orderId <![CDATA[<>]]> #{sort} and costNumber=#{costnumber,jdbcType=VARCHAR} and type=#{type} ORDER BY orderId
  </select>
  
  <!-- 查询不等于此orderid和其所有儿子的所有 -->
  <select id="findNotContainSelfAndSon" resultMap="BaseResultMap" >
  	 select * from navigation where costNumber=#{costnumber,jdbcType=VARCHAR} and type=#{type} and orderId not BETWEEN #{start} and #{end} ORDER BY orderId;
  </select>
  
  <!-- 根据sort查询 -->
  <select id="getIdBySort" resultMap="BaseResultMap" parameterType="java.lang.Integer">
     select * from navigation where costNumber=#{costnumber,jdbcType=VARCHAR} and orderId = #{sort}
  </select>
  
  <!-- 修改儿子的类型-->
   <update id="updateSonType" flushCache="true">
     update navigation set type = #{type} where costNumber = #{costnumber} and orderId between #{start} and #{end}
  </update>
  
  <!-- 查询帮助中心列表 -->
  <select id="findHelpCenterByCostnum" resultMap="BaseResultMap">
    select name, url 
     FROM navigation 
     WHERE upId = (select id FROM navigation where `name`=#{helpName}<!-- AND costNumber=#{costnumber} -->) 
     ORDER BY orderId;
  </select>
  
   <select id="findPhoneByType" resultMap="BaseResultMap">
  	select * from navigation where 
  	type=#{type,jdbcType=INTEGER} 
  	and costNumber =#{costnumber,jdbcType=VARCHAR} 
  	and isShow = 1
  	and level = 1
  	order by costNumber,orderId
  </select>
  
   <!-- 根据url查询 -->
  <select id="findByurl" resultMap="BaseResultMap" parameterType="java.lang.String">
    select pname, url 
     FROM navigation 
     WHERE  url = #{url,jdbcType=VARCHAR}
     ORDER BY orderId;
  </select>
</mapper>