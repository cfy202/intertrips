<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.wenjing.dao.AttractionMapper" >
  <cache type="org.mybatis.caches.ehcache.EhcacheCache" />
  <resultMap id="BaseResultMap" type="com.wenjing.entity.Attraction" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nameCN" property="namecn" jdbcType="VARCHAR" />
    <result column="namePY" property="namepy" jdbcType="VARCHAR" />
    <result column="isHot" property="ishot" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="imageUrl" property="imageurl" jdbcType="LONGVARCHAR" />
    <result column="attractionTypeId" property="attractiontypeid" jdbcType="VARCHAR" />
    <result column="destinationId" property="destinationid" jdbcType="VARCHAR" />
    <result column="costNumber" property="costnumber" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
   <!-- 
    <association property="attractiontypeAttractiontypeid" column="attractiontypeid" select="com.wenjing.dao.AttractiontypeMapper.selectByPrimaryKey" />
    <association property="destinationDestinationid" column="destinationid" select="com.wenjing.dao.DestinationMapper.selectByPrimaryKey" />
    <collection property="attractionimagesAttractionid" ofType="com.wenjing.entity.Attractionimage" column="id" select="com.wenjing.dao.AttractionimageMapper.selectByAttractionid" />
    <collection property="tourlineattractionsAttractionid" ofType="com.wenjing.entity.Tourlineattraction" column="id" select="com.wenjing.dao.TourlineattractionMapper.selectByAttractionid" />
    -->
  </resultMap>
  
  <resultMap id="AttractionDestinationMap" type="com.wenjing.entity.Attraction" extends="BaseResultMap">
    <association property="destinationDestinationid" column="destinationid" select="com.wenjing.dao.DestinationMapper.selectByPrimaryKey" />
  </resultMap>
  
  <select id="selectByAttractiontypeid" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List" /> from attraction where attractionTypeId =#{attractionTypeId}
  </select>
  
  <select id="selectByDestinationid" resultMap="BaseResultMap" >
    select <include refid="Base_Column_List" /> from attraction where destinationId =#{destinationId}
  </select>
  <resultMap id="ResultMapWithBLOBs" type="com.wenjing.entity.Attraction" extends="BaseResultMap" >
    <result column="imageUrl" property="imageurl" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `name`, nameCN, namePY, isHot, sort, attractionTypeId, destinationId, costNumber,level
  </sql>
  <sql id="Blob_Column_List" >
    imageUrl
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from attraction
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true" >
    delete from attraction
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wenjing.entity.Attraction" flushCache="true" >
    insert into attraction (id, `name`, nameCN, 
      namePY, isHot, sort, 
      attractionTypeId, destinationId, costNumber, 
      imageUrl,level)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{namecn,jdbcType=VARCHAR}, 
      #{namepy,jdbcType=VARCHAR}, #{ishot,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, 
      #{attractiontypeid,jdbcType=VARCHAR}, #{destinationid,jdbcType=VARCHAR}, #{costnumber,jdbcType=VARCHAR}, 
      #{imageurl,jdbcType=LONGVARCHAR}, #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wenjing.entity.Attraction" flushCache="true" >
    insert into attraction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      `name`,
      nameCN,
      namePY,
      isHot,
      sort,
      attractionTypeId,
      destinationId,
      costNumber,
      imageUrl,
      level,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{namecn,jdbcType=VARCHAR},
      #{namepy,jdbcType=VARCHAR},
      #{ishot,jdbcType=INTEGER},
      #{sort,jdbcType=INTEGER},
      #{attractiontypeid,jdbcType=VARCHAR},
      #{destinationid,jdbcType=VARCHAR},
      #{costnumber,jdbcType=VARCHAR},
      #{imageurl,jdbcType=LONGVARCHAR},
      #{level,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wenjing.entity.Attraction" flushCache="true" >
    update attraction
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="namecn != null" >
        nameCN = #{namecn,jdbcType=VARCHAR},
      </if>
      <if test="namepy != null" >
        namePY = #{namepy,jdbcType=VARCHAR},
      </if>
      <if test="ishot != null" >
        isHot = #{ishot,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="attractiontypeid != null" >
        attractionTypeId = #{attractiontypeid,jdbcType=VARCHAR},
      </if>
      <if test="destinationid != null" >
        destinationId = #{destinationid,jdbcType=VARCHAR},
      </if>
      <if test="costnumber != null" >
        costNumber = #{costnumber,jdbcType=VARCHAR},
      </if>
      <if test="imageurl != null" >
        imageUrl = #{imageurl,jdbcType=LONGVARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wenjing.entity.Attraction" flushCache="true" >
    update attraction
    set `name` = #{name,jdbcType=VARCHAR},
      nameCN = #{namecn,jdbcType=VARCHAR},
      namePY = #{namepy,jdbcType=VARCHAR},
      isHot = #{ishot,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      attractionTypeId = #{attractiontypeid,jdbcType=VARCHAR},
      destinationId = #{destinationid,jdbcType=VARCHAR},
      costNumber = #{costnumber,jdbcType=VARCHAR},
      imageUrl = #{imageurl,jdbcType=LONGVARCHAR},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wenjing.entity.Attraction" flushCache="true" >
    update attraction
    set `name` = #{name,jdbcType=VARCHAR},
      nameCN = #{namecn,jdbcType=VARCHAR},
      namePY = #{namepy,jdbcType=VARCHAR},
      isHot = #{ishot,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      attractionTypeId = #{attractiontypeid,jdbcType=VARCHAR},
      destinationId = #{destinationid,jdbcType=VARCHAR},
      costNumber = #{costnumber,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findAllByCostNumber" resultMap="AttractionDestinationMap">
     select * from `attraction` 
     order by sort desc
  </select> 
  <select id="getMaxSort" resultType="java.lang.Integer">
     select ifnull(max(sort),0) from `attraction` order by sort
  </select>
  <select id="findHotAttraction" resultType="java.lang.String">
  select nameCN from attraction where isHot = 1 and nameCN in
  <foreach collection="att" item="item" index="index" separator="," close=")" open="("> 
    #{item}
  </foreach> limit 0,#{num,jdbcType=INTEGER}
  </select>
  
  <!-- 获取景点总记录条数 -->
  <select id="getSAttractionCount" resultType="java.lang.Integer">
     select count(*) from `attraction`,destination  where `attraction`.destinationId = destination.id   
     <if test="search != null" >
	       and  CONCAT(`attraction`.`name`, `attraction`.nameCN,destination.nameCN) like '%${search}%'
	 </if> 
  </select>
  <!-- 分页查询景点 -->
  <select id="selectAllByPage" resultMap="AttractionDestinationMap">
     select `attraction`.* from `attraction`,destination  where 
     `attraction`.destinationId = destination.id 
       <if test="search != null" >
	       and  CONCAT(`attraction`.`name`,`attraction`.nameCN,destination.nameCN) like '%${search}%'
	   </if> 
     order by sort desc limit #{startPos},#{pageSize}
  </select>
  <update id="updateNamepy" parameterType="com.wenjing.entity.Attraction" flushCache="true" >
  	update attraction set namePY = #{namepy,jdbcType=VARCHAR} where id = #{id,jdbcType=VARCHAR}
  </update>
   <select id="findRegionShow" resultMap="BaseResultMap" parameterType="java.lang.String">
   <!--  
   	select DISTINCT nameCN,namePY 
   	from attraction, tourlineattraction 
   	where attraction.id = tourlineattraction.attractionId
	and tourlineattraction.tourLineId in 
	(select
	t.id
	from tourline t,product p,region r,showtourline st
	where 
	t.id=st.tourlineId
	and st.costNumber = #{costnumber,jdbcType=VARCHAR}
	and p.costNumberIds like '%${costnumber}%'
	and t.productId=p.id
	and t.parentIds like '%${regionid}%'
	and r.id = t.regionId
	and r.isShow = 1
	and (select min(sellingPrice) from `tourprice`,tourdate where 
	  tourprice.tourDateId=tourdate.id 
	  and tourdate.tourLineId=t.id 
	  and tourdate.isshow = true
	  and tourprice.costNumber = #{costnumber,jdbcType=VARCHAR}
	  and tourdate.endDate >= #{time,jdbcType=INTEGER})
	is not null)
	-->
	
	select namecn,namePY from attraction,attractionlevel where  attractionlevel.`level`= attraction.`level` and attraction.id in (
	select attractionId from tourlineattraction inner join 
	(
	select t.id from tourline t,product p,region r,showtourline st where t.id=st.tourlineId 
	and r.id = t.regionId and r.isShow = 1
	and st.costNumber = #{costnumber,jdbcType=VARCHAR} 
	and p.costNumberIds like '%${costnumber}%' and t.productId=p.id and t.parentIds like '%${regionid}%' 
	and (select min(sellingPrice) from `tourprice`,tourdate where tourprice.tourDateId=tourdate.id and tourdate.tourLineId=t.id and tourdate.isshow = true and tourprice.costNumber = #{costnumber,jdbcType=VARCHAR} and tourdate.endDate >= #{time,jdbcType=INTEGER}) is not null
	) as tl on tl.id = tourLineId) ORDER BY attractionlevel.`level` 
  </select>
  <select id="findByNameNamacn" resultMap="BaseResultMap">
     select * from `attraction` where 
     name=#{name,jdbcType=VARCHAR} or nameCN=#{name,jdbcType=VARCHAR}
  </select>
  <update id="replaceByDestinationId" parameterType="java.lang.String" flushCache="true">
  	update attraction set destinationId=#{replaceId} where destinationId=#{destinationId}
  </update>
  
  <!-- 查询关联目的地信息 -->
  <select id="selectByids" resultMap="BaseResultMap">
   select * from `attraction` where id in 
   <foreach collection="list" item="item" index="index" open="("
			separator="," close=")">
			#{item}
	</foreach>
  </select>
  <select id="selectByDestinationids" resultMap="BaseResultMap" >
    select attraction.* from attraction ,tourlineattraction where attraction.id = tourlineattraction.attractionId 
    and tourlineattraction.tourlineId=#{tourlineId} 
    and attraction.destinationId in 
     <foreach collection="destinationIds" item="item" index="index"
		separator="," close=")" open="(">
	     #{item}
	 </foreach>
  </select>
</mapper>