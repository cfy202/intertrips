<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.wenjing.dao.GetScoreMapper" >
  <cache type="org.mybatis.caches.ehcache.EhcacheCache" />
  <resultMap id="BaseResultMap" type="com.wenjing.entity.GetScore" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="gettime" property="gettime" jdbcType="INTEGER" />
    <result column="projectName" property="projectName" jdbcType="VARCHAR" />
    <result column="namepy" property="namepy" jdbcType="VARCHAR" />
    <result column="orderNo" property="orderNo" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="memberid" property="memberid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, gettime, projectName, namepy, orderNo, score, status, memberid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from getscore
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true" >
    delete from getscore
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.wenjing.entity.GetScore" flushCache="true" >
    insert into getscore (id, gettime, projectName, namepy, orderNo, score, status, memberid)
    values (#{id,jdbcType=VARCHAR}, #{gettime,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR},
            #{namepy,jdbcType=VARCHAR}, #{orderNo,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
            #{status,jdbcType=INTEGER}, #{memberid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wenjing.entity.GetScore" flushCache="true" >
    insert into getscore
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id, 
      gettime, 
      projectName, 
      namepy,
      orderNo, 
      score, 
      status, 
      memberid,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=VARCHAR}, 
      #{gettime,jdbcType=INTEGER}, 
      #{projectName,jdbcType=VARCHAR},
      #{namepy,jdbcType=VARCHAR},
      #{orderNo,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, 
      #{memberid,jdbcType=VARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wenjing.entity.GetScore" flushCache="true" >
    update getscore
    <set >
      <if test="gettime != null" >
        gettime = #{gettime,jdbcType=INTEGER},
      </if>
      <if test="projectName != null" >
        projectName = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="namepy != null" >
        namepy = #{namepy,jdbcType=VARCHAR},
      </if>
      <if test="orderNo != null" >
        orderNo = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="memberid != null" >
        memberid = #{memberid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wenjing.entity.GetScore" flushCache="true" >
    update getscore
    set  gettime = #{gettime,jdbcType=INTEGER},
         projectName = #{projectName,jdbcType=VARCHAR},
         namepy = #{namepy,jdbcType=VARCHAR},
         orderNo = #{orderNo,jdbcType=VARCHAR},
         score = #{score,jdbcType=INTEGER},
         status = #{status,jdbcType=INTEGER},
          memberid = #{memberid,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

   <!-- batchAdd -->
  <insert id="batchAddMemberInfo" parameterType="java.util.List" flushCache="true" >
    insert into getscore (id, gettime, projectName, namepy, orderNo, score, status, memberid)
     values
    <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.id,jdbcType=VARCHAR}, #{item.gettime,jdbcType=INTEGER}, #{item.projectName,jdbcType=VARCHAR},#{item.namepy,jdbcType=VARCHAR}, 
         #{item.orderNo,jdbcType=VARCHAR}, #{item.score,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER}, 
         #{item.memberid,jdbcType=VARCHAR}
        )
    </foreach>  
  </insert>
  
  <!-- 根据memberid查询 -->
  <select id="findBymemberid" resultMap="BaseResultMap">
     select <include refid="Base_Column_List" /> from getscore where memberid=#{memberid} and status=#{status}
  </select>
  
  <select id="findByMemberId" resultMap="BaseResultMap">
  	 select <include refid="Base_Column_List" /> from getscore where memberid=#{memberId} 
  </select>
  
  <!-- 根据id批量修改状态 -->
  <update id="batchUpdateStatusById" parameterType="java.util.List" flushCache="true" >
    update getscore set status = #{status,jdbcType=INTEGER}, gettime = #{gettime,jdbcType=INTEGER}
     where id in
    <foreach collection="getScoeridList" item="item" index="index" open="(" separator="," close=")" >  
        #{item}  
    </foreach> 
  </update>
  
  <!-- 根据id批量修改状态 和namepy-->
   <update id="updateGetScoreByMemeberid" flushCache="true" >
    update getscore set status = #{status,jdbcType=INTEGER}, namepy = #{namepy,jdbcType=VARCHAR}, gettime = #{gettime,jdbcType=INTEGER} where id = #{id}   
  </update>
  
  <!-- 根据memberId删除对应积分记录 -->
  <delete id="deleteByMemberId" parameterType="java.lang.String" flushCache="true" >
    delete from getscore where memberid = #{memberid,jdbcType=VARCHAR}
  </delete>
</mapper>